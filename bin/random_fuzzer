#!/usr/bin/env python3
import sys
import traceback
import pdb
from vnnlib_fuzzer.config import config
from vnnlib_fuzzer.util import die, warning
from vnnlib_fuzzer.onnx_fuzz import mk_onnx
from vnnlib_fuzzer.vnnlib_fuzz import mk_vnnlib
import numpy as np

def main():
    if config.dnn_file == '':
        die("No specified output onnx file.")
    if config.vnnlib_file == '':
        die("No specified output vnnlib file")

    def rng(n=config.n_rng): return np.random.randint(1, n)
    in_size = rng()
    out_size = rng()
    depth = rng()
    width_layer = rng()
    input_range = rng()
    DNN = mk_onnx(in_size=in_size,out_size=out_size,depth=depth,width_layer=width_layer,range=input_range)
    VNNLIB = mk_vnnlib(config.sat,DNN)
    DNN.write_onnx(filename=config.dnn_file)
    VNNLIB.write_vnnlib(filename=config.vnnlib_file)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        extype, value, tb = sys.exc_info()
        print(e)
        if config.debug:
            traceback.print_exc()
            pdb.post_mortem(tb)